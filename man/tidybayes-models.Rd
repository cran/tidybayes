% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tidybayes-models.R
\name{tidybayes-models}
\alias{tidybayes-models}
\title{Models supported by tidybayes}
\description{
Tidybayes supports two classes of models and sample formats: Models/formats that provide prediction functions, and those that
do not.
}
\section{All Supported Models/Sample Formats}{


\strong{All supported models/formats} support the base tidybayes sample extraction functions, such as
\code{\link[=tidy_draws]{tidy_draws()}}, \code{\link[=spread_draws]{spread_draws()}}, and \code{\link[=gather_draws]{gather_draws()}}. These models/formats include:

\itemize{
\item \link[rstan:stan]{rstan} models
\item \code{\link[brms:brm]{brms::brm()}} models
\item \link[rstanarm:rstanarm-package]{rstanarm} models
\item \code{\link[runjags:runjags]{runjags::runjags()}} models
\item \code{\link[rjags:jags.model]{rjags::jags.model()}} models, if sampled using \code{\link[rjags:coda.samples]{rjags::coda.samples()}}
\item \code{\link[jagsUI:jags]{jagsUI::jags()}} models
\item \code{\link[MCMCglmm:MCMCglmm]{MCMCglmm::MCMCglmm()}} models
\item \code{\link[coda:mcmc]{coda::mcmc()}} and \code{\link[coda:mcmc.list]{coda::mcmc.list()}} objects, which are output by several model
types.
\item Any object with an implementation of \code{\link[coda:mcmc.list]{coda::as.mcmc.list()}}. For a list of those available in your
environment, run \code{methods(as.mcmc.list)}
}

If you install the \href{https://mjskay.github.io/tidybayes.rethinking/}{tidybayes.rethinking} package, models from
the \href{https://github.com/rmcelreath/rethinking}{rethinking} package are also supported.
}

\section{Models Supporting Prediction}{


In addition, the \strong{following models support fit and prediction} extraction functions, such as
\code{\link[=add_fitted_draws]{add_fitted_draws()}} and \code{\link[=add_predicted_draws]{add_predicted_draws()}}:

\itemize{
\item \code{\link[brms:brm]{brms::brm()}} models
\item \link[rstanarm:rstanarm-package]{rstanarm} models
}

\strong{If your model type is not in the above list}, you may still be able to use the \code{\link[=add_draws]{add_draws()}}
function to turn matrices of predictive draws (or fit draws) into tidy data frames.

If you install the \href{https://mjskay.github.io/tidybayes.rethinking/}{tidybayes.rethinking} package, models from
the \href{https://github.com/rmcelreath/rethinking}{rethinking} package are also supported.
}

\section{Extending tidybayes}{


To include basic support for new models, one need only implement the \code{\link[=tidy_draws]{tidy_draws()}} generic function
for that model.

To include support for estimation and prediction, one must implement the \code{\link[=fitted_draws]{fitted_draws()}} and
\code{\link[=predicted_draws]{predicted_draws()}} generic functions.
}

